# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZOn2cZya-aWHWGwUcJVQgU0DC8JpDg0v
"""

!pip uninstall indic-transliteration
!pip install indic-transliteration

import pandas as pd
from indic_transliteration import sanscript

import re
import nltk
nltk.download('punkt')
from nltk.tokenize import word_tokenize
import string
import pandas as pd
from indic_transliteration import sanscript
import string

def read_excel_file(file_path):
    df = pd.read_excel(file_path)
    return df

def transliterate_hindi_sentences(df):
    hindi_columns = ["Sentences"]
    english_columns = [sanscript.transliterate(col, sanscript.DEVANAGARI, sanscript.HK) for col in hindi_columns]
    df[english_columns] = df[hindi_columns].applymap(lambda x: sanscript.transliterate(x, sanscript.DEVANAGARI, sanscript.HK))
    return df

def clean_words(df):
    df["Sentences"] = df["Sentences"].apply(lambda sentence: re.sub(r'[^\w\s]', '', sentence))
    df["Words"] = df["Sentences"].apply(word_tokenize)
    translator = str.maketrans('', '', string.punctuation + string.digits)
    df["Words"] = df["Words"].apply(lambda words: [word.translate(translator) for word in words])
    df = df.explode("Words")
    df["Annotation"] = df["Annotation"].astype(str)
    df[["Words", "Annotation"]] = df.apply(lambda row: pd.Series([row["Words"], row["Annotation"]]) if row["Words"] != "," else pd.Series(["", ""]), axis=1)
    df = df[df["Words"] != ""]
    df = df.drop(columns=["Sentences"])
    df.insert(1, "Language", "Hin")
    df = df[~df["Annotation"].isin(["0", "3"])]
    df.rename(columns={"Annotation": "Label"}, inplace=True)
    df["Label"] = df["Label"].replace({"1": "positive", "2": "negative", "4": "neutral"})
    df = df[["Words", "Language", "Label"]]
    return df

def write_excel_file(df, output_file_path):
    df.to_excel(output_file_path, index=False)
    print(df.head())

# Read XLSX file into DataFrame
file_path = "Bhaav-Dataset.xlsx"
df = read_excel_file(file_path)

# Transliterate Hindi sentences to English
df = transliterate_hindi_sentences(df)

# Write the updated DataFrame to a new XLSX file
output_file_path = "output_file.xlsx"
write_excel_file(df, output_file_path)

# Read XLSX file into DataFrame
file_path = "output_file.xlsx"
df = read_excel_file(file_path)

# Clean words and preprocess the DataFrame
df = clean_words(df)

# Write the updated DataFrame to a new XLSX file
output_file_path = "output_file_preprocessed_final.xlsx"
write_excel_file(df, output_file_path)